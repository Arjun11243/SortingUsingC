#include<stdio.h>


int partition(int a[], int low, int high)
{
    int temp;
    int pivot = a[low];
    int i = low + 1;
    int j = high;

    do
    {
        while (a[i] <= pivot)
        {
            i++;
        }
        while (a[j] > pivot)
        {
            j--;
        }

        if (i < j)
        {
            temp = a[i];
            a[i] = a[j];
            a[j] = temp;
        }
    } while (i < j);

    temp = a[low];
    a[low] = a[j];
    a[j] = temp;
    return j;
}
void quick(int a[], int low, int high)
{
    int partitionindex;
    if (low < high)
    {
        partitionindex = partition(a, low, high);
        quick(a, low, partitionindex - 1);
        quick(a, partitionindex + 1, high);
    }
}
void printarray(int *a, int n)
{
    for (int i = 0; i < n; i++)
    {
        printf("%d", a[i]);
        printf("\t");
    }

    printf("\n");
}
void main()
{
    int n, i, a[50];
    printf("\nEnter size of array\n");
    scanf("%d", &n);

    printf("\nEnter the array\n");
    for (i = 0; i < n; i++)
    {
        scanf("%d", &a[i]);
    }
    printf("\narray before sorting\n");
    printarray(a, n);
    quick(a, 0, n - 1);
    printf("\narray after sorting\n");
    printarray(a, n);
}
